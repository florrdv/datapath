LOADMEM
########
# MAIN #
########
# For debugging purposes
zero r1 # 0

# Let's save a constant 1 in r1
ori r1 1 # 1

# Let's initialize the stack pointer in register 6
# We'll have a stack that grows downwards and a stack pointer that points
# to the first free address
lui r6 111111 # 2
ori r6 111111 # 3

jal TBD

##################
# INITIALIZATION #
##################
# Update the frame pointer
sw r7 $sp 0

# We'll store:
# the array pointer in register 2
# the length of the array in register 3
# the current index in register 4
ori r3 32 # 4

# If we've reached the end, continue
eq r5 r3 r4 # 5, will set r5 to 1 if r3 and r4 are not the same
brnz r5 10 # 6

# Store the current index in the array at the current index
sw r4 r2 0 # 7

# Increment the current element
add r4 r4 r1 # 8
# Increment the array pointer
add r2 r2 r1 # 9
j 3 # 10

CHECKMEM
r0: 0
r1: 0
r2: 0
r3: 0
r4: 0
r5: 0
r6: 0
r7: 0
pc: 2
END
